name: Release

on:
  push:
    branches:
      - main
      - alpha
      - beta

jobs:
  setup:
    name: Set environment variables
    runs-on: ubuntu-latest
    outputs:
      DEPLOY_ENVIRONMENT: ${{ steps.env.outputs.DEPLOY_ENVIRONMENT }}
    steps:
      - name: '☁️ compute environment variables'
        id: env
        run: |
          echo "DEPLOY_ENVIRONMENT=$([[ ${{ github.ref_name }} == 'main' ]] && echo 'production' || echo ${{ github.ref_name }})" >> $GITHUB_OUTPUT

  test:
    name: Test and lint
    uses: ./.github/workflows/development.yml

  # docker:
  #   name: Build container
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: '☁️ checkout repository'
  #       uses: actions/checkout@v3

  #     - name: '🔧 setup buildx'
  #       uses: docker/setup-buildx-action@v2

  #     - name: '🔧 cache docker layers'
  #       uses: actions/cache@v3
  #       with:
  #         path: /tmp/.buildx-cache
  #         key: ${{ runner.os }}-buildx-${{ github.sha }}
  #         restore-keys: |
  #           ${{ runner.os }}-buildx-

  #     - name: '🔧 docker meta'
  #       id: meta
  #       uses: docker/metadata-action@v4
  #       with:
  #         images: ${{ github.repository }}
  #         tags: latest

  #     - name: '📦 docker build'
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: .
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
  #         outputs: type=docker,dest=/tmp/docker.tar
  #         push: false
  #         cache-from: type=gha, scope=${{ github.workflow }}
  #         cache-to: type=gha, scope=${{ github.workflow }}

  #     - name: '📂 docker artifacts'
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: docker
  #         path: /tmp/docker.tar

  build:
    name: Build application
    runs-on: ubuntu-latest
    steps:
      - name: '☁️ checkout repository'
        uses: actions/checkout@v4

      - name: '🔧 setup node'
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: '🔧 install npm@latest'
        run: npm i -g npm@latest

      - name: '📦 install dependencies'
        uses: bahmutov/npm-install@v1

      - name: '🚀 static app'
        run: npm run build

      - name: '📂 production artifacts'
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist

  release:
    environment:
      name: ${{ needs.setup.outputs.DEPLOY_ENVIRONMENT }}
      url: https://github.com/${{ github.repository }}/releases/tag/${{ steps.semantic-release.outputs.release-tag }}
    name: Semantic release
    needs:
      - setup
      - test
      - build
      # - docker
    runs-on: ubuntu-latest
    steps:
      - name: '☁️ checkout repository'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # - name: '📂 download docker artifacts'
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: docker
      #     path: /tmp

      # - name: '📦 load tag'
      #   run: |
      #     docker load --input /tmp/docker.tar
      #     docker image ls -a

      - name: '📂 download build artifacts'
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist

      - name: '🚀 release'
        id: semantic-release
        # uses: open-sauced/release@v2
        uses: takanome-dev/opensauced.release@fix-release-gh-action-repo
        env:
          SKIP_NPM_PUBLISH: true
          SKIP_DOCKER_PUBLISH: true
          SKIP_ACTION_REPLACEMENT: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cleanup:
    name: Cleanup actions
    needs:
      - release
    runs-on: ubuntu-latest
    steps:
      - name: '♻️ remove build artifacts'
        uses: geekyeggo/delete-artifact@v4
        with:
          name: |
            build
        # docker
